on:
  workflow_call:
  workflow_dispatch:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate_test_matrix:
    runs-on: ubuntu-latest
    outputs:
      extras: ${{ steps.set-matrix.outputs.extras }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Extract extras from `pyproject.toml`
        id: set-matrix
        shell: python
        run: |
          import tomllib
          import os
          import json
          with open('pyproject.toml', 'rb') as f:
              manifest = tomllib.load(f)
          yaml = [''] + list(manifest['tool']['poetry']['extras'])
          out = json.dumps(yaml)
          print(out)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            f.write('extras=' + out)

  test:
    name: test ${{ matrix.extras && 'with' || '' }} ${{ matrix.extras }} on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: generate_test_matrix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        extras: ${{ fromJson(needs.generate_test_matrix.outputs.extras) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          install-options: --without lint ${{ matrix.extras && format('--extras "{0}"', matrix.extras) || '' }}

      - name: Run Tests
        run: make test
